#!/usr/bin/env python
# -*- coding: utf-8 -*-
# $Id: settings.py 1277 2021-12-24 04:53:04Z Mint $
#
# Copyright (c) 2021 Nuwa Information Co., Ltd, All Rights Reserved.
#
# Licensed under the Proprietary License,
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at our web site.
#
# See the License for the specific language governing permissions and
# limitations under the License.
#
# $Author: Mint $
# $Date: 2021-12-24 12:53:04 +0800 (週五, 24 十二月 2021) $
# $Revision: 1277 $

"""
Django settings for Pandora project.

Generated by 'django-admin startproject' using Django 1.11.25.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import sys

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
PROJECT_ROOT = os.path.dirname(os.path.abspath(__file__))

sys.path.append(os.path.join(os.path.dirname(BASE_DIR), 'Containers'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'zlewf^v+0v0_6@vzvuh4tz(02e=xpogpu9xuke@)7b%6&sr#lv'

# SECURITY WARNING: don't run with debug turned on in production!
import Iuno
from Iuno import DEVELOPMENT, STAGE, PRODUCTION

SERVER_MODE = Iuno.detectServerMode(locals())
DEBUG = Iuno.detectDebug(locals())

APP_NAME = 'deploy'
APP_VERSION = "1.1.1." + "$Revision: 1277 $"[11:-2]

ADMINS = (
    ('Bear', 'bear@nuwainfo.com'),
)

IUNO_SITE_DOMAIN_NAMES = {
    DEVELOPMENT: '127.0.0.1:8000',
    STAGE: 'stage.deploy.com',     #記得修改...
    PRODUCTION: 'deploy.nuwainfo.com',  #記得修改...
}

IUNO_INITIAL_DATA = os.path.join("main", "fixtures", "initial_data.json")
IUNO_INITIAL_MEDIA = os.path.join("initial_data.zip")
# ALLOWED_HOSTS = [
#     '*',
# ]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'rest_framework',
    'drf_yasg',

    'main',
    'Iuno.member',
]


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# ROOT_URLCONF = 'API.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates'),

            os.path.join(os.path.dirname(BASE_DIR), 'Containers', 'Templates',),
            os.path.join(os.path.dirname(BASE_DIR), 'Containers', 'Apps',),
            os.path.join(os.path.dirname(BASE_DIR), 'Containers', 'Services',),
            os.path.join(os.path.dirname(BASE_DIR), 'Containers', 'Middlewares',),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# WSGI_APPLICATION = 'API.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#         'OPTIONS': {
#             # see also
#             # https://docs.python.org/3.7/library/sqlite3.html#sqlite3.connect
#             'timeout': 20,  # in seconds

#             # This configuration will make transaction actually invalid,
#             # it will commit automatically even inside a transaction.
#             'isolation_level': None,
#         }
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

# TIME_ZONE = 'UTC'

# USE_I18N = True

USE_L10N = True

USE_TZ = True

DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

# if DEBUG:
#     STATICFILES_DIRS = (
#         os.path.join(BASE_DIR, 'static'),
#     )
# else:
#     STATIC_ROOT = os.path.join(BASE_DIR, 'static')
# STATIC_URL = '/static/'
# STATIC_ROOT = os.path.join(PROJECT_ROOT, 'staticfiles')

RAVEN_CONFIG = {
    'dsn': "https://eb977a65f6c74370b9c329f2fe562308:77c55963bc7f4efea599a76eaae379e0@sentry.nuwainfo.com/21",
}

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
        },
    },
    'handlers': {
        'sentry': {
            'level': 'WARNING',
            'class': 'raven.contrib.django.raven_compat.handlers.SentryHandler',
        },
        'console': {
            'level': 'WARNING',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose'
        }
    },
    'loggers': {
        'django': {
            'handlers': ['sentry'],
            'level': 'DEBUG',
            'propagate': True,
        },
        'raven': {
            'level': 'DEBUG',
            'handlers': ['sentry'],
            'propagate': False,
        },
        'sentry.errors': {
            'level': 'DEBUG',
            'handlers': ['sentry'],
            'propagate': False,
        },
    }
}

# MEDIA_URL = "/media/"
# MEDIA_ROOT = "media"

PANDORA_API_REGISTRY = "oci-registry.nuwainfo.com"
PANDORA_API_REGISTRY_USERNAME = "Lavender"
PANDORA_API_REGISTRY_PASSWORD = "lavender15963j"

PANDORA_API_DEPLOY_TESTING = True
PANDORA_API_DEPLOY_TEST_MAXTIME = 10
PANDORA_API_DEPLOY_SLEEPTIME = 3
PANDORA_API_MAINTENANCE_SLEEPTIME = 2

CLOUDFLARE_EMAIL = "lavender.chan@nuwainfo.com"
CLOUDFLARE_API_KEY = "82a8aa6dfd398086161f196d7ce60e34bd74e"

PANDORA_API_URL = "http://127.0.0.1:8000"
PANDORA_APPS_DIR = os.path.join(os.path.dirname(BASE_DIR), 'Containers', 'Apps')
PANDORA_KEYS_DIR = os.path.join(BASE_DIR, 'Keys')

from Pandora import getConnectKwargs
PANDORA_KEYS_MANAGER_LOGIN_KEYWORD = getConnectKwargs(password="@%)@5529")

IUNO_MEMBER_ENABLE = True
IUNO_MEMBER_TRAC_ENABLE = True

Iuno.attachSettings(locals())

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend', # 預設登入方式
    'Iuno.member.Backends.TracBackend',

]
